--- a/drivers/gpu/drm/panfrost/panfrost_mmu.c	2021-06-05 08:50:21.856859392 +0300
+++ b/drivers/gpu/drm/panfrost/panfrost_mmu.c	2021-06-05 09:27:21.671139313 +0300
@@ -36,8 +36,8 @@
 	ret = readl_relaxed_poll_timeout_atomic(pfdev->iomem + AS_STATUS(as_nr),
 		val, !(val & AS_STATUS_AS_ACTIVE), 10, 1000);
 
-	if (ret)
-		dev_err(pfdev->dev, "AS_ACTIVE bit stuck\n");
+	//if (ret)
+	//	dev_err(pfdev->dev, "AS_ACTIVE bit stuck\n");
 
 	return ret;
 }

--- a/drivers/gpu/drm/panfrost/panfrost_mmu.c	2021-06-08 10:15:05.698385437 +0300
+++ b/drivers/gpu/drm/panfrost/panfrost_mmu.c	2021-06-08 19:09:00.950775065 +0300
@@ -292,8 +292,8 @@
 		prot |= IOMMU_NOEXEC;
 
 	sgt = drm_gem_shmem_get_pages_sgt(obj);
-	if (WARN_ON(IS_ERR(sgt)))
-		return PTR_ERR(sgt);
+	//if (WARN_ON(IS_ERR(sgt)))
+	//	return PTR_ERR(sgt);
 
 	mmu_map_sg(pfdev, mapping->mmu, mapping->mmnode.start << PAGE_SHIFT,
 		   prot, sgt);

--- a/drivers/gpu/drm/panfrost/panfrost_mmu.c	2021-06-05 06:17:11.811941047 +0300
+++ b/drivers/gpu/drm/panfrost/panfrost_mmu.c	2021-06-05 08:38:35.227371324 +0300
@@ -660,7 +660,7 @@
 		ret = -1;
 		if ((status & mask) == BIT(as) && (exception_type & 0xF8) == 0xC0)
 			ret = panfrost_mmu_map_fault_addr(pfdev, as, addr);
-
+#if 0
 		if (ret)
 			/* terminal fault, print info about the fault */
 			dev_err(pfdev->dev,
@@ -678,7 +678,7 @@
 				exception_type, panfrost_exception_name(pfdev, exception_type),
 				access_type, access_type_name(pfdev, fault_status),
 				source_id);
-
+#endif
 		status &= ~mask;
 
 		/* If we received new MMU interrupts, process them before returning. */
