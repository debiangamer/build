--- a/drivers/gpu/drm/panfrost/panfrost_job.c	2021-06-16 06:23:41.756057210 +0300
+++ b/drivers/gpu/drm/panfrost/panfrost_job.c	2021-06-16 19:11:56.213730135 +0300
@@ -444,7 +444,7 @@
 	 */
 	if (dma_fence_is_signaled(job->done_fence))
 		return;
-
+#if 0
 	dev_err(pfdev->dev, "gpu sched timeout, js=%d, config=0x%x, status=0x%x, head=0x%x, tail=0x%x, sched_job=%p",
 		js,
 		job_read(pfdev, JS_CONFIG(js)),
@@ -452,7 +452,7 @@
 		job_read(pfdev, JS_HEAD_LO(js)),
 		job_read(pfdev, JS_TAIL_LO(js)),
 		sched_job);
-
+#endif
 	/* Scheduler is already stopped, nothing to do. */
 	if (!panfrost_scheduler_stop(&pfdev->js->queue[js], sched_job))
 		return;
@@ -494,13 +494,13 @@
 			enum panfrost_queue_status old_status;
 
 			job_write(pfdev, JS_COMMAND_NEXT(j), JS_COMMAND_NOP);
-
+#if 0
 			dev_err(pfdev->dev, "js fault, js=%d, status=%s, head=0x%x, tail=0x%x",
 				j,
 				panfrost_exception_name(pfdev, job_read(pfdev, JS_STATUS(j))),
 				job_read(pfdev, JS_HEAD_LO(j)),
 				job_read(pfdev, JS_TAIL_LO(j)));
-
+#endif
 			/*
 			 * When the queue is being restarted we don't report
 			 * faults directly to avoid races between the timeout
